06-3 오픈 소스 프로젝트에 기여하기
깃허브에 개인 저장소를 만들고 소스를 커밋하는 활동뿐만 아니라 깃허브에 있는 오픈소스
프로젝트에 참여하는 활동도 모두 기록된다. 깃허브를 자신의 소스 저장 공간으로 사용하는
것도 좋지만, 깃허브의 핵심이라고 할 수 있는 오픈 소스 프로젝트에 기여해 보는 경험은
자신의 실력을 키우고, 나아가 타인에게 증명할 수 있는 좋은 기회가 될 것이다.

컨트리뷰션의 종류
    깃허브에는 사용자 누구나 참여할 수 있는 오픈 소스 프로젝트가 많다. 그렇다면 우리는
    이 프로젝트에 어떻게 기여할 수 있을까? 깃버브에서 기여 활동을 나타내는 말인 컨트리
    뷰션에는 소스으 버그를 수정하는 것뿐만 아니라 오픈소스에 도움이 될만한 거의 모든
    활동이 포함된다.
    소스나 문서의 오타를 수정할 수도 있고, 한글화되어 있는 오픈 소스일 경우 잘못 번역
    된 한글을 수정할 수도 있다.
    오픈 소스 프로젝트에 가장 많이 참여하는 분야는 소스 코드 수정이다. 개발 능력을 갖
    춘 사용자라면 오픈 소스의 버그를 찾아서 알려주거나 찾은 버그를 수정하는 등 오픈 소
    스 자체를 수정하는 활동이다. 또는 추가되었으면 하는 기능을 제안할 수도 있다.

오픈 소스 저장소 복제하기
    깃허브를 사용하면서 오픈 소스 프로젝트에 기여하려면 몇 가지 과정을 거쳐야 한다.
    가장 먼저 수정하려는 오픈 소스 저장소를 자신의 저장소로 복제해야 한다. 다른 저장소
    에 있는 소스를 직접 수정해서는 안 되기 때문이다. 이 과정을 '포크(fork)한다'고 함
    1. https://github.com/peacein/doit 저장소로 이동한다. 저장소의 이름은 'doit'이다.
       README파일과 demo.txt파일만 있는 간단한 저장소이다. 여기서 화면 오른쪽 상단에
       있는 [Fork]를 누른다.
    2. 포크로 꼭 찍어서 스캔하는 그림이 나타나면 저장소가 복제되고 있다는 뜻이다. 
       잠시 기다리면 복제가 끝난다.
    3. 여러분의 계정으로 돌아가 보면 doit 저장소가 복제되어 있을 것이다. 화면 왼쪽
       위를 보면 '계정이름/doit'이라고 나타나 있고, 그 아래에 'forked from peacin/doit'
       이라고 되어 있다. peacein/doit 저장소에서 포크했다는 의미이다.
       저장소를 포크했다면 그 저장소에 있는 소스나 README파일을 수정할 수 있다.

포크한 저장소를 지역 저장소로 클론하기
    포크한 소스는 깃허브의 원격 저장소에 있기 때문에 사용자 컴퓨터로 저장소를 복제(clone)
    한 뒤 지역 저장소에서 수정하고 푸시한다.
    1. 깃허브 계정/doit 저장소에서 [Code]를 선택하고 HTTPS 주소를 복사한다.
    2. git clone 복사한 주소 doit
       깃 배시 프로그램을 실행해서 git clone 명령을 사용해 방금 주소를 복사한 저장소를
       복제한다. 끝에 붙인 'doit'은 doit 디렉터리로 클론한다는 뜻이다.
    3. cd doit
       ls -al
    4. vi demo.txt
       demo.txt 수정
       ....
       오픈 소스에 기여하기 위해 공부 중입니다.
    5. git commit -am 'add my text'
    6. git push
    7. 웹 브라우저에서 원격 저장소에 접속해 커밋한 내용 확인
       하지만 이것은 포크한 저장소의 파일이 수정된 것일 뿐, 원래 소스가 있던 저장소
       (peacein/doit)에는 반영되지 않았습니다. 오픈 소스 개발자에게 수정한 내용을 원래
       소스에 합쳐 달라고 알려 주어야 한다. 

오픈 소스 프로젝트로 풀 리퀘스트 보내기
    이제 포크해 온 원격 저장소의 새로운 커밋을 원본 저장소에 합치는 방법을 알아보자.
    먼저 원본 저장소의 개발자에게 내가 수정한 것을 반영해 달라고 요청해야 한다.
    이 요청을 풀 리퀘스트(pull request)라고 부른다.
    1. 포크한 자신의 저장소에서 파일 목록 위에 있는 즉, This branch is ..... 끝에
       [Contribute]의 Open pull request 버튼 클릭
    2. 원본 저장소(peacein/doit)의 master 브랜치와 복제된 저장소(사용자계정/doit)의
       master 브랜치 사이에 어떤 차이가 있는지 보여준다.
    3. 수정 내용 확인이 끝났다면 수정 내용을 원본 저장소에 반영해 달라고 요청하기 위해
       [Create pull request] 클릭
    4. 커밋할 때 입력했던 커밋 메시지와 설명이 나타난다. 기본 커밋 메시지를 그대로 사용
       해도 되지만, 원본 저장소의 개발자에게 문서의 어떤 부분을 왜 수정했는지 설명할
       내용을 입력하는 것이 좋다. 내용 입력이 끝나면 [Create pull request]를 클릭

참고| 내가 만든 소스를 누군가 수정한다면
    입장을 바꿔서 누군가 여러분 저장소에 풀 리퀘스트를 보내올 수도 있다. 다른 사용자가
    여러분이 작성한 소스에 자기가 수정한 내용을 반영해 달라고 요청하는 경우 요청을 받은
    저장소의 [Pull requests] (331) 에 숫자가 나타난다. 
    화면 상단 메인 메뉴에 있는 [Pull requests]를 누르면 풀 리퀘스트 목록이 있을 것이다.
    그 목록을 누른다
    다른 사용자가 보낸 수정 내용을 검토 및 자신의 소스에 합치고 싶다면 
    [Merge pull request]를 누른다.
