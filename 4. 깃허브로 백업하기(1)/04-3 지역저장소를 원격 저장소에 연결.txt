
원격 저장소를 만들었으니 이제 지역 저장소에서 한 작업을 원격 저장소로
올리거나 내려받아 작업해 보자. 이를 위해서는 먼저 지역 저장소와 
원격 저장소를 연결해야...

지역 저장소 만들기
    먼저 깃허브의 원격 저장소에 연결할 새로운 지역 저장소를 만들자.
    미리 만들어 둔 지역 저장소가 있다면 터미널 창에서 해당 지역 저장소를
    열어 놓고 다음 내용인 '원격 저장소에 연결하기' 참조
    1. git init loc-git
       cd loc-git

    해당 로컬 저장소의 환경설정(config)을 체크 원격저장소 아이디/이메일
    일치여부 확인(인증 오류 회피 위해서...)

       vi f1.txt <-- 'a' 입력 저장
    2. git add f1.txt
       git commit -m 'add a'
       git log

원격 저장소에 연결하기
    깃허브 저장소 (웹)화면에서 알려준 여러가지 접속 방법 중 
    '커맨트 라인에서 기존 저장소를 푸시하기'
    …or push an existing repository from the command line
    
    git remote add origin https://github.com/narospace/test-1.git
    git branch -M main
    git push -u origin main
    방법 사용

    1. 지역 저장소와 원격 저장소를 연결하려면 깃허브의 저장소 주소를
       알아야 함. 웹에서 깃허브 저장소 접속 후 화면 상단 오른쪽 
       HTTPS | SSH ....................................ㅁ아이콘
       클릭하면 주소가 복사됨

    2. 저장소 주소를 복사했다면 터미널 창에 다음과 같이 입력
       $ git remote add origin 복사한 주소 붙여넣기
       이 명령은 원격 저장소(remote)에 origin을 추가(add)하겠다고 깃
       에게 알려준다. 여기에서 origin은 깃허브 저장소 주소(https://github.com/....)
       를 가리킨다. 깃허브 저장소 주소를 그대로 쓰면 너무 길기 때문에 origin
       이라는 단어로 줄여서 remote에 추가하는 것이다. 
       이렇게 지역 저장소를 특정 원격 저장소에 연결하는 것은 한 번만 하면 된다.
       깃에서 기본 브랜치를 master라고 하는 것처럼 기본 원격 저장소에는 origin
       이라는 이름을 사용한다.
       
    3. 오류 메시지 없이 프롬프트($)가 나타나면 제대로 실행된 것
    4. git remote -v
        제대로 연결됐는지 확인 -v 옵션 사용      
        origin  https://github.com/narospace/test-1.git (fetch)
        origin  https://github.com/narospace/test-1.git (push)
        
        remote에 origin이 연결되어 있고 origin이 가리키는 주소가 표시
        



