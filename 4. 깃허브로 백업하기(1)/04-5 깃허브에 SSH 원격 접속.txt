04-5 깃허브에 SSH 원격 접속하기
여기에서는 Secure Shell, 줄여서 SSH라는 방법을 통해서 깃허브에 접속하는 법

SSH 원격 접속이란
    보안이 강화된 안전한 방법으로 정보를 교환하는 방식
    SSH에서는 기본적으로 프라이빗 키(Private Key)와 퍼블릭 키(Public Key)를
    한 쌍으로 묶어서 컴퓨터를 인증한다. 퍼블릭 키는 말 그대로 외부로 공개되는
    키이고, 프라이빗 키는 아무도 알 수 없게 사용자 컴퓨터에 저장되는 키이다.
    사용자 컴퓨터에서 SSH 키 생성기를 실행하면 프라이빗 키와 퍼블릭 키가 만들어진다.

    일반적으로 깃허브의 원격 저장소에 파일을 올리는 등의 작업을 하기 위해서는
    아이디와 비밀번호를 입력해서 깃허브에게 내가 해당 저장소를 만든 계정의 주인임을
    인증해야 한다. 이에 비해 SSH 원격 접속은 프라이빗 키와 퍼블릭 키를 사용해 
    현재 사용하고 있는 기기를 깃허브에 인증하는 방식이다.
    예를 들어 서버환경에서 깃허브 저장소에 접속해야 한다면 서버 자체를 깃허브에 등록
    하고, 개인 노트북으로 접속한다면 노트북을 깃허브에 등록해 둔다.
    이렇게 하면 터미널 창을 이용할 수 있는 상태라면 언제 어디서든 깃허브에 접속할 수 있다.
    또 터미널 창에서 깃허브를 사용하다 보면 아이디와 비밀번호를 요구하는 경우가 많은데,
    SSH 접속 방법을 사용하면 자동로그인 기능을 통해 이러한 번거로움을 줄일 수 있다.

SSH 키 생성하기
    사용자 컴퓨터에서 SSH 키 생성기를 사용하면 프라이빗 키와 퍼블릭 키가 만들어 진다.
    이 키들이 어디에 저장되고 어떤 용도로 사용되는지 살펴보자
    1. cd ~ 홈 디렉터리로 이동
    2. ssh-keygen
        파일 이름은 입력하지 말고 Enter
        두 번 더 Enter를 누르면 화면에 SSH를 통해서 다른 컴퓨터에 접속할 수 있는 비밀번호가
        생성된다. 실제로 내부를 들여다보면 굉장히 복잡한 비밀번호라서 외부에서 쉽게 공격 곤란,
        화면에는 몇 가지 파일 경로가 표시, 그중에 id_rsa 파일이 프라이빗 키이고,
        id_rsa.pub 파일이 퍼블릭 키이다.

        Your identification has been saved in /c/Users/call1/.ssh/id_rsa
        Your public key has been saved in /c/Users/call1/.ssh/id_rsa.pub

    3. cd ~/.ssh
       ls -al
    4. .ssh 디렉터리 안에 프라이빗 키(id_rsa)파일과 퍼블릭 키(id_rsa.pub)파일이
       만들어진 것을 확인

깃허브에 퍼블릭 키 전송하기
    앞에서 만든 키를 사용해 보기 전에 SSH 방식으로 깃허브 저장소에 접속하는 과정을
    간단히 살펴보자. SSH 방식으로 접근하려면 먼저 사용자 컴퓨터에 만들어져 있는 
    퍼블릭 키를 깃허브 서버로 전송한 다음 저장한다. 사용자 컴퓨터에서 깃허브 저장소에
    접속하면 사용자 컴퓨터에 있는 프라이빗 키와 깃허브서버에 있는 퍼블릭 키를 비교한다.
    퍼블릭 키와 프라이빗 키는 한 쌍이므로 두 개의 키가 서로 맞으면 사용자 컴퓨터와
    깃허브 저장소가 연결된다.
    1. cd ~/.ssh
       cat id_rsa.pub
    2. 해당 문자열 즉 ssh-rsa ....부터 끝까지 선택한 후 마우스 오른버튼 [Copy] 
    3. 웹 브라우저에서 깃허브에 접속한 후 로그인
       화면 오른쪽 상단 사용자 아이콘을 누른 후 [Settings] 선택
    4. 여러 설정 메뉴 중 [SSH and GPG keys]를 누른 후 퍼블릭 키를 추가하기 위해
       오른 상단에 나타난 [New SSH key]를 누른다.
    5. SSH 중 퍼블릭 키는 여러 개을 등록할 수 있기 때문에 Title 항목에 현재 등록하는
       SSH 퍼블릭 키를 쉽게 알아볼 수 있도록 제목을 붙인다.
       그리고나서 Key 항목에 앞에서 복사한 문자열 키 값을 붙여 넣는다.
    6. [Add SSH key] 버튼을 눌러서 SSH 키를 추가하기
    7. 퍼블릭 키를 추가할 때 비밀번호를 한 번 확인하는 과정 수행 [Confirm password]
    8. 퍼블릭 키를 깃허브 서버에 올렸다. 이제 SSH 키를 만들었던 컴퓨터는 깃허브 저장소의
       SSH 주소만 알고 있으면 로그인 정보를 입력하지 않고도 즉시 그 저장소에 접속할 수 있다.

SSH 주소로 원격 저장소 연결하기
    SSH 원격 접속 준비 완료
    1. 깃허브 사이트 화면 상단 오른 [+] 누른 후 [New repository]를 선택
       저장소 이름을 입력한 후 [Create repository]
    2. 저장소가 만들어지면 HTTPS 주소가 나타남. 우리는 SSH 방식으로 접근할 것이므로
       [SSH]를 눌러서 SSH 주소를 표시
       주소복사 아이콘을 눌러서 SSH 주소를 복사한
    3. git init connect-ssh
       cd connect-ssh
    4. git remote add origin 복사한 주소 붙여넣기
    5. git remote -v
        origin  git@github.com:narospace/connect-ssh.git (fetch)
        origin  git@github.com:narospace/connect-ssh.git (push)
    
    이제부터는 원격 저장소를 사용하는 동안 로그인 정보를 요구하지 않기 때문에 
    좀 더 편하게 푸시나 풀을 할 수 있게 되었다.    

