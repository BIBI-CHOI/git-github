
지역 저장소와 원격 저장소를 연결했으니 이제부터 저장소의 소스를
원격 저장소에 올릴 수도 내려받을 수도 있다. 이 때 지역 저장소의
소스를 원격 저장소로 올리는 것을 '푸시(push)'라고 하고,
원격 저장소에서 지역 저장소로 내려받는 것을 '풀(pull)'이라고 한다.

원격 저장소에 파일 올리기(git push)
    1. git push -u origin master
        지역 저장소의 브랜치를 origin, 즉 원격 저장소의 master
        브랜치로 푸시하라는 명령이다. 여기에서 '-u' 옵션은 지역 
        저장소의 브랜치를 원격 저장소의 master브랜치에 연결하기 위한 것으로
        처음에 한 번만 사용된다.

        참고| 에러
        remote: Permission to narospace/test-1.git denied to bitcamp-pool.
        fatal: unable to access 'https://github.com/narospace/test-1.git/': 
        The requested URL returned error: 403

        403오류는 해당 레포지토리 주소에 접근 권한이 없을 경우 발생
        git remote -v
        위 명령어를 통해 현재 remote 리스트들을 확인
        origin  https://github.com/narospace/test-1.git (fetch)
        origin  https://github.com/narospace/test-1.git (push)

        해결하기위해서는 재인증이 필요
        인증을 위해 Remote URL을 변경해주어야 한다.

        $ git remote set-url origin https://call1212@github.com/narospace/test-1.git
        $ git remote -v
          origin  https://call1212@github.com/narospace/test-1.git (fetch)
          origin  https://call1212@github.com/narospace/test-1.git (push)
        $ git push -u origin master
          인증을 위한 로그인 창 팝업
          인증 확인
            Enumerating objects: 3, done.
            Counting objects: 100% (3/3), done.
            Writing objects: 100% (3/3), 200 bytes | 200.00 KiB/s, done.
            Total 3 (delta 0), reused 0 (delta 0), pack-reused 0
            To https://github.com/narospace/test-1.git
            * [new branch]      master -> master
            Branch 'master' set up to track remote branch 'master' from 'origin'.

    2. 푸시가 끝났다는 것은 지역 저장소의 커밋이 원격 저장소로 올라갔다는 뜻
       깃허브 저장소가 열려있는 웹 브라우저 창에서 F5 새로고침 후 확인

    3. 파일 목록 위의 '1 commit' 지역 저장소 커밋 내용과 같음
    4. 한 번이라도 지역 저장소와 원격 저장소를 연결해서 푸시했다면 그 다음부터는
       더 간단하게 푸시할 수 있다. 지역 저장소에서 또 다른 커밋을 만들고 다시 푸시
    5. vi f1.txt
    6. 원래 내용 다음에 'b'를 추가
    7. git commit -am 'add b'

       git log 

    8. git push
        이미 앞에서 지역 저장소의 브랜치와 origin의 master브랜치를 연결했기 때문에
        다시 파일을 푸시할 때는 git push라고만 입력
    9. 웹 브라우저 깃허브 저장소 확인
    10.git log
        commit fbeb28b598392c0bcd67dac56b...... (HEAD -> master, origin/master)
        Author: jyk <call1212@nate.com>
        Date:   Fri Nov 5 16:55:36 2021 +0900

            add b

깃허브 사이트에서 직접 커밋하기
    보통 지역 저장소와 원격 저장소를 연결한 후 지역 저장소의 커밋을 원격 저장소에 푸시
    하는 방법을 많이 사용하지만, 깃허브 사이트에서 직접 커밋할 수도 있다.
    지역 저장소가 있는 컴퓨터를 사용할 수 없을 때...
    1. 깃허브의 저장소 접속 [Add file] >[Create new file]
    2. 파일이름 f2.txt 내용 숫자 '1, 2, 3' 입력
    3. 화면 아래 Commit new file 항목을 원하는 내용으로 수정 후
       [Commit new file]
    4. 원격 저장소에 새로운 커밋이 추가

원격 저장소에서 파일 내려받기(git pull)
    원격 저장소에 있는 소스파일을 다른 사용자가 수정했거나 깃허브 사이트에서 직접 커밋
    하면 지역 저장소와 차이 발생, 이럴 때는 원격 저장소와 지역 저장소의 상태를 동기화
    하기 위해 원격 저장소의 소스를 지역 저장소로 가져와야 한다. 이것을 '풀(pull)한다'
    1. 앞에서 loc-git 지역 저장소를 원격 저장소에 연결한 후 푸시했다. 그리고 깃허브
       사이트에서 바로 f2.txt라는 파일을 새로 만듦. 그러므로 log-git 지역 저장소에는
       아직 f2.txt 파일이 없음. 
       ls -al
    2. git pull origin master
        origin(원격 저장소)의 내용을 master 브랜치로 가져온다는 뜻
    3. ls -al
    4. git log
        깃허브 사이트에서 만들었던 'Create f2.txt'라는 커밋이 지역 저장소 
        커밋 로그에도 나타나는 것을 확인

깃허브 저장소 화면 살펴보기
    1. narospace/test-1 Public
        깃허브 계정/저장소이름
    2. Unwatch : 이 저장소의 알림 내용을 받기
    3. Star : 이 저장소를 즐겨찾기, 숫자가 높을수록 사용자가 많다는 뜻
    4. Fork : 이 저장소를 복제, 깃허브에서 오픈 소스 프로젝트에 참여하거나 직접 소스를
              분석하면서 공부하려면 먼저 저장소를 복제해야 한다
    5. minutes ago ? commits : 커밋 개수나 브랜치 개수 등 커밋과 관련된 정보
    6. 파일들 : 저장소에 있는 파일 정보, 파일 이름과 최신 커밋 메시지, 최신 커밋 시간 표시
    깃허브에서 다른 저장소의 소스를 살펴볼 때 2,3,4 등의 개수를 눈여겨보면 해당 소스를 참고
    할지 결정하는 데 도움(https://github.com/git/git)

    
