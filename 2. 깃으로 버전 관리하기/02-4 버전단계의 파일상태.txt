깃에서는 버전을 만드는 각 단계마다 파일 상태를 다르게 표시

tracked 파일과 untracked 파일
    git status 명령 : 파일 상태와 관련된 메시지 표시
    작업트리 파일 : tracked 상태와 untracked 상태로 나뉨
    두 개의 상태가 무엇을 의미하는지?
    1. vi hello.txt
        '3'을 추가
    2. vi hello2.txt
        'a'
        'b'
        'c'
        'd'
        입력 후 저장
    3. git status
        변경된 파일이 아직 스테이지에 올라가지 않았다.
        Changes not staged for commit:
         modified:   hello.txt 수정됨
        이렇게 깃은 한 번이라도 커밋을 한 파일의 
        수정 여부를 계속 추적(tracked 파일)
        
        한 번도 깃에서 버전 관리를 하지 않았기 때문에
        수정 내역을 추적하지 않음(untracked 파일)
        Untracked files:
         hello2.txt

    4. git add .
        두 파일 모두 스테이지에 올림
    5. git status
         Changes to be committed:
            modified:   hello.txt
            new file:   hello2.txt
    6. git commit -m "message3"
       git log
    7. 그런데 각 커밋에 어떤 파일들이 관련된 것인지 알 수 없음
    8. git log --stat
        가장 최근의 커밋부터 순서대로 메시지와 관련 파일이 표시
        로그 메시지가 너무 많은 경우 한 화면씩 나눠 표시 Enter키를 
        누르면 다음 로그 페이지 'Q'를 누르면 로그화면을 빠져나와 
        깃 명령 모드로 입력 대기함

unmodified, modified, staged 상태
    한 번이라도 버전을 만들었던 파일은 tracked 상태
    깃의 커밋 과정 중에서 tracked 파일의 상태가 어떻게 바뀌는지 확인
    1. ls -al
    2. git status
        nothing to commit, working tree clean
        현재 작업 트리에 있는 모든 파일의 상태는 
        unmodified, 즉 수정되지 않은 상태
    3. hello2.txt 파일 수정
        'a'만 남기고 나머지 내용 삭제
    4. git status
        Changes not staged for commit:
            modified:   hello2.txt
    5. git add hell2.txt
       git status
        Changes to be committed:
            modified:   hello2.txt
    6. git commit -m "delete b, c, d"
       git status
        nothing to commit, working tree clean
        unmodified 상태로 돌아감




지금까지 깃에서 버전을 만드는 과정에서 어느 단계에 있는지에 따라
파일의 상태가 달라진다. 

[untracked]  [unmodified]  [modified]  [staged]
     : ------------------------------------>                                  
     :               ---------->             스테이징
     :                          ----------->
     :             <------------------------ 커밋


방금 커밋한 메시지 수정하기
    문서의 수정내용을 기록해둔 커밋 메시지를 즉시 수정
    가장 최근의 커밋 메시지를 수정
    $ git commit --amend
        vi편집기로 수정 및 저장
        커밋 메시지가 수정되면서 이전 커밋에 더해진다.
        

버전 관리에서 제외시키기(.gitignore)
    버전 관리 중인 디렉터리 안에 관리를 하지 않을 특정 파일 또는 디렉터리가
    있다면 .gitignore 파일을 만들어 목록을 지정할 수 있다. 
    편집기를 사용하여 .gitignore 파일을 만들어 그 안에 버전 관리하지 않을
    파일, 또는 디렉터리 이름이나 파일 확장자를 입력하면 된다.
    주로 개인적인 메모 파일이나 백업파일 등



    
